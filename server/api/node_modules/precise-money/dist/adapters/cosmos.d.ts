declare function cosmosToMinor(h: string | number, decimals?: number): bigint;
declare function cosmosFromMinor(u: bigint, decimals?: number): string;
declare function cosmosResolveDecimals(params: {
    denom?: string;
    symbol?: string;
    chainId?: string | number;
}, fallback?: number): number;
/** Opcional: buscar exponent via bank metadata (client/grpc/rest da app) */
declare function cosmosFetchDecimalsViaBank(client: {
    bankDenomMetadata: (denom: string) => Promise<{
        denom_units?: {
            denom: string;
            exponent: number;
        }[];
        display?: string;
    }>;
}, denom: string): Promise<number>;
declare function cosmosEnsureDecimals(args: {
    client?: {
        bankDenomMetadata: (d: string) => Promise<any>;
    };
    denom?: string;
    symbol?: string;
    chainId?: string | number;
}, fallback?: number): Promise<number>;

export { cosmosEnsureDecimals, cosmosFetchDecimalsViaBank, cosmosFromMinor, cosmosResolveDecimals, cosmosToMinor };
