/** Pure formatting with a safe default (9). */
declare function solanaToMinor(human: string | number, decimals?: number): bigint;
declare function solanaFromMinor(minor: bigint, decimals?: number): string;
/** Resolve decimals using the runtime registry first, then fallback (9). */
declare function solanaResolveDecimals(params: {
    symbol?: string;
    mint?: string;
}, // base58 mint
fallback?: number): number;
/** Fetch decimals from the Mint via a minimal web3.js-compatible Connection (parsed account). */
declare function solanaFetchMintDecimalsViaParsed(connection: {
    getParsedAccountInfo: (pubkey: any, commitment?: any) => Promise<{
        value: any;
    }>;
}, mintPubkey: any): Promise<number>;
/** Ensure decimals: try chain fetch first, then registry, then fallback. */
declare function solanaEnsureDecimals(args: {
    connection?: {
        getParsedAccountInfo: (pubkey: any) => Promise<{
            value: any;
        }>;
    };
    mint?: any;
    symbol?: string;
}, fallback?: number): Promise<number>;

export { solanaEnsureDecimals, solanaFetchMintDecimalsViaParsed, solanaFromMinor, solanaResolveDecimals, solanaToMinor };
