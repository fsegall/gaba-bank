import {
  DEC,
  fromMinor,
  toMinor
} from "./chunk-27ZSX5IA.js";

// src/adapters/stellar.ts
function stellarClassicToMinor(h) {
  return toMinor(h, 7);
}
function stellarClassicFromMinor(u) {
  return fromMinor(u, 7);
}
function stellarToMinor(h, decimals = 7) {
  return toMinor(h, decimals);
}
function stellarFromMinor(u, decimals = 7) {
  return fromMinor(u, decimals);
}
function stellarResolveDecimals(params, fallback = 7) {
  const { symbol, issuer, contractId } = params ?? {};
  if (contractId) {
    const d = DEC.getById({ chain: "stellar", symbol: symbol ?? "", address: contractId });
    if (typeof d === "number") return d;
  }
  if (issuer) {
    const d = DEC.getById({ chain: "stellar", symbol: symbol ?? "", issuer });
    if (typeof d === "number") return d;
  }
  if (symbol) {
    const d = DEC.get(symbol);
    if (typeof d === "number") return d;
  }
  return fallback;
}

export {
  stellarClassicToMinor,
  stellarClassicFromMinor,
  stellarToMinor,
  stellarFromMinor,
  stellarResolveDecimals
};
